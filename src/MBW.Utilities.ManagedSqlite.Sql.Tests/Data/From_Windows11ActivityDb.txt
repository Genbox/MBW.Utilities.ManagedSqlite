# SQL
#    Table Name
#    Column1Name
#    Column2Name ClrType(Integer, STRING, Bytes) SqlType Modifiers(Primary, RowId)
# 
CREATE TABLE Activation(_ActivationID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,ActivationKey TEXT COLLATE NOCASE,Flags INTEGER NOT NULL DEFAULT 0,HostId TEXT COLLATE NOCASE,Executable TEXT COLLATE NOCASE,Entrypoint TEXT,RuntimeType TEXT COLLATE NOCASE,StartPage TEXT COLLATE NOCASE,ResourceGroup TEXT COLLATE NOCASE,_Dictionary BLOB);
	Activation
	_ActivationID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	ActivationKey	STRING	TEXT	
	Flags	INTEGER	INTEGER	
	HostId	STRING	TEXT	
	Executable	STRING	TEXT	
	Entrypoint	STRING	TEXT	
	RuntimeType	STRING	TEXT	
	StartPage	STRING	TEXT	
	ResourceGroup	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE AppExecutionAlias(_AppExecutionAliasID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Alias TEXT NOT NULL COLLATE NOCASE,Extension INTEGER NOT NULL,Flags INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB,FOREIGN KEY(Extension) REFERENCES ApplicationExtension(_ApplicationExtensionID));
	AppExecutionAlias
	_AppExecutionAliasID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Alias	STRING	TEXT	
	Extension	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE AppExecutionAliasUser(_AppExecutionAliasUserID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,User INTEGER NOT NULL,ApplicationIdentity INTEGER NOT NULL,Alias TEXT NOT NULL COLLATE NOCASE,Status INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB,FOREIGN KEY(User) REFERENCES User(_UserID),FOREIGN KEY(ApplicationIdentity) REFERENCES ApplicationIdentity(_ApplicationIdentityID));
	AppExecutionAliasUser
	_AppExecutionAliasUserID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	ApplicationIdentity	INTEGER	INTEGER	
	Alias	STRING	TEXT	
	Status	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE AppExtension(_AppExtensionID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Name TEXT NOT NULL COLLATE NOCASE,Id TEXT NOT NULL COLLATE NOCASE,PublicFolder TEXT COLLATE NOCASE,DisplayName TEXT NOT NULL,Description TEXT,Extension INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(Extension) REFERENCES ApplicationExtension(_ApplicationExtensionID));
	AppExtension
	_AppExtensionID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Name	STRING	TEXT	
	Id	STRING	TEXT	
	PublicFolder	STRING	TEXT	
	DisplayName	STRING	TEXT	
	Description	STRING	TEXT	
	Extension	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE AppExtensionHost(_AppExtensionHostID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Extension INTEGER NOT NULL,Name TEXT NOT NULL COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(Extension) REFERENCES ApplicationExtension(_ApplicationExtensionID));
	AppExtensionHost
	_AppExtensionHostID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Extension	INTEGER	INTEGER	
	Name	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE AppService(_AppServiceID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Name TEXT NOT NULL COLLATE NOCASE,Extension INTEGER NOT NULL,"Index" INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(Extension) REFERENCES ApplicationExtension(_ApplicationExtensionID));
	AppService
	_AppServiceID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Name	STRING	TEXT	
	Extension	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE AppUriHandler(_AppUriHandlerID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,HostName TEXT NOT NULL COLLATE NOCASE,Path TEXT COLLATE NOCASE,Extension INTEGER NOT NULL,ProgID TEXT COLLATE NOCASE,AppUriHandlerGroup INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB,FOREIGN KEY(Extension) REFERENCES ApplicationExtension(_ApplicationExtensionID),FOREIGN KEY(AppUriHandlerGroup) REFERENCES AppUriHandlerGroup(_AppUriHandlerGroupID));
	AppUriHandler
	_AppUriHandlerID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	HostName	STRING	TEXT	
	Path	STRING	TEXT	
	Extension	INTEGER	INTEGER	
	ProgID	STRING	TEXT	
	AppUriHandlerGroup	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE AppUriHandlerGroup(_AppUriHandlerGroupID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Name TEXT NOT NULL COLLATE NOCASE,Extension INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(Extension) REFERENCES ApplicationExtension(_ApplicationExtensionID));
	AppUriHandlerGroup
	_AppUriHandlerGroupID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Name	STRING	TEXT	
	Extension	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE Application(_ApplicationID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL,"Index" INTEGER NOT NULL,ApplicationType INTEGER NOT NULL DEFAULT 0,Flags INTEGER NOT NULL DEFAULT 0,Subsystem INTEGER NOT NULL DEFAULT 0,PackageRelativeApplicationId TEXT NOT NULL COLLATE NOCASE,ApplicationUserModelId TEXT NOT NULL COLLATE NOCASE,DisplayName TEXT NOT NULL,Description TEXT NOT NULL,Square150x150Logo TEXT COLLATE NOCASE,Square44x44Logo TEXT NOT NULL COLLATE NOCASE,Wide310x150Logo TEXT COLLATE NOCASE,Square310x310Logo TEXT COLLATE NOCASE,Square71x71Logo TEXT COLLATE NOCASE,ForegroundText TEXT,BackgroundColor INTEGER NOT NULL,Activation INTEGER NOT NULL DEFAULT 0,HostId TEXT COLLATE NOCASE,Executable TEXT COLLATE NOCASE,Entrypoint TEXT,StartPage TEXT COLLATE NOCASE,ResourceGroup TEXT COLLATE NOCASE,LockScreenNotification INTEGER NOT NULL DEFAULT 0,LockScreenBadgeLogo TEXT COLLATE NOCASE,SplashScreenImage TEXT COLLATE NOCASE,SplashScreenBackgroundColor INTEGER NOT NULL DEFAULT 0,InitialRotationPreference INTEGER NOT NULL DEFAULT 0,ApplicationViewMinWidth INTEGER NOT NULL DEFAULT 0,AppListEntry INTEGER NOT NULL DEFAULT 0,EditionId TEXT COLLATE NOCASE,VisualGroup TEXT COLLATE NOCASE,Parameters TEXT COLLATE NOCASE,CurrentDirectoryPath TEXT COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(Package) REFERENCES Package(_PackageID),FOREIGN KEY(Activation) REFERENCES Activation(_ActivationID));
	Application
	_ApplicationID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	ApplicationType	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	Subsystem	INTEGER	INTEGER	
	PackageRelativeApplicationId	STRING	TEXT	
	ApplicationUserModelId	STRING	TEXT	
	DisplayName	STRING	TEXT	
	Description	STRING	TEXT	
	Square150x150Logo	STRING	TEXT	
	Square44x44Logo	STRING	TEXT	
	Wide310x150Logo	STRING	TEXT	
	Square310x310Logo	STRING	TEXT	
	Square71x71Logo	STRING	TEXT	
	ForegroundText	STRING	TEXT	
	BackgroundColor	INTEGER	INTEGER	
	Activation	INTEGER	INTEGER	
	HostId	STRING	TEXT	
	Executable	STRING	TEXT	
	Entrypoint	STRING	TEXT	
	StartPage	STRING	TEXT	
	ResourceGroup	STRING	TEXT	
	LockScreenNotification	INTEGER	INTEGER	
	LockScreenBadgeLogo	STRING	TEXT	
	SplashScreenImage	STRING	TEXT	
	SplashScreenBackgroundColor	INTEGER	INTEGER	
	InitialRotationPreference	INTEGER	INTEGER	
	ApplicationViewMinWidth	INTEGER	INTEGER	
	AppListEntry	INTEGER	INTEGER	
	EditionId	STRING	TEXT	
	VisualGroup	STRING	TEXT	
	Parameters	STRING	TEXT	
	CurrentDirectoryPath	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE ApplicationBackgroundTask(_BackgroundTaskID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Type TEXT NOT NULL COLLATE NOCASE,Extension INTEGER NOT NULL,"Index" INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(Extension) REFERENCES ApplicationExtension(_ApplicationExtensionID));
	ApplicationBackgroundTask
	_BackgroundTaskID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Type	STRING	TEXT	
	Extension	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE ApplicationContentUriRule(_ApplicationContentUriRuleID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Application INTEGER NOT NULL,"Index" INTEGER NOT NULL,Uri TEXT NOT NULL COLLATE NOCASE,Type INTEGER NOT NULL,WindowsRuntimeAccess INTEGER NOT NULL DEFAULT 0,Flags INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB,FOREIGN KEY(Application) REFERENCES Application(_ApplicationID));
	ApplicationContentUriRule
	_ApplicationContentUriRuleID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Application	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	Uri	STRING	TEXT	
	Type	INTEGER	INTEGER	
	WindowsRuntimeAccess	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE ApplicationExtension(_ApplicationExtensionID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Application INTEGER NOT NULL,"Index" INTEGER NOT NULL,Category TEXT NOT NULL COLLATE NOCASE,Activation INTEGER NOT NULL DEFAULT 0,HostId TEXT COLLATE NOCASE,Executable TEXT COLLATE NOCASE,Entrypoint TEXT,RuntimeType TEXT COLLATE NOCASE,StartPage TEXT COLLATE NOCASE,ResourceGroup TEXT COLLATE NOCASE,Flags INTEGER NOT NULL DEFAULT 0,Subsystem INTEGER NOT NULL DEFAULT 0,Parameters TEXT COLLATE NOCASE,CurrentDirectoryPath TEXT COLLATE NOCASE,Id TEXT COLLATE NOCASE,_LocalizedDictionary BLOB,_Dictionary BLOB,FOREIGN KEY(Application) REFERENCES Application(_ApplicationID),FOREIGN KEY(Activation) REFERENCES Activation(_ActivationID));
	ApplicationExtension
	_ApplicationExtensionID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Application	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	Category	STRING	TEXT	
	Activation	INTEGER	INTEGER	
	HostId	STRING	TEXT	
	Executable	STRING	TEXT	
	Entrypoint	STRING	TEXT	
	RuntimeType	STRING	TEXT	
	StartPage	STRING	TEXT	
	ResourceGroup	STRING	TEXT	
	Flags	INTEGER	INTEGER	
	Subsystem	INTEGER	INTEGER	
	Parameters	STRING	TEXT	
	CurrentDirectoryPath	STRING	TEXT	
	Id	STRING	TEXT	
	_LocalizedDictionary	BYTES	BLOB	
	_Dictionary	BYTES	BLOB	

CREATE TABLE ApplicationIdentity(_ApplicationIdentityID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,ApplicationUserModelId TEXT NOT NULL COLLATE NOCASE,_Dictionary BLOB);
	ApplicationIdentity
	_ApplicationIdentityID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	ApplicationUserModelId	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE ApplicationProperty(_ApplicationPropertyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Application INTEGER NOT NULL,"Index" INTEGER NOT NULL,Name TEXT NOT NULL COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(Application) REFERENCES Application(_ApplicationID));
	ApplicationProperty
	_ApplicationPropertyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Application	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	Name	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE ApplicationUser(_ApplicationUserID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,User INTEGER NOT NULL,ApplicationIdentity INTEGER NOT NULL,Application INTEGER NOT NULL,Package INTEGER NOT NULL,PackageUser INTEGER NOT NULL,FOREIGN KEY(User) REFERENCES User(_UserID),FOREIGN KEY(ApplicationIdentity) REFERENCES ApplicationIdentity(_ApplicationIdentityID),FOREIGN KEY(Application) REFERENCES Application(_ApplicationID),FOREIGN KEY(Package) REFERENCES Package(_PackageID),FOREIGN KEY(PackageUser) REFERENCES PackageUser(_PackageUserID));
	ApplicationUser
	_ApplicationUserID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	ApplicationIdentity	INTEGER	INTEGER	
	Application	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	PackageUser	INTEGER	INTEGER	

CREATE TABLE AppxExtension(_AppxExtensionID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,User INTEGER NOT NULL,Package INTEGER NOT NULL,Category TEXT NOT NULL,KeySTRING TEXT,RegistrationInformation TEXT NOT NULL,ExtensionStatus INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(User) REFERENCES User(_UserID),FOREIGN KEY(Package) REFERENCES Package(_PackageID));
	AppxExtension
	_AppxExtensionID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Category	STRING	TEXT	
	KeySTRING	STRING	TEXT	
	RegistrationInformation	STRING	TEXT	
	ExtensionStatus	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE Bundle(_BundleID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL,UniqueLanguage TEXT COLLATE NOCASE,UniqueScale INTEGER NOT NULL,UniqueDXFeatureLevel INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(Package) REFERENCES Package(_PackageID));
	Bundle
	_BundleID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	UniqueLanguage	STRING	TEXT	
	UniqueScale	INTEGER	INTEGER	
	UniqueDXFeatureLevel	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE BundlePackage(_BundlePackageID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Bundle INTEGER NOT NULL,PackageType INTEGER NOT NULL DEFAULT 0,Version INTEGER NOT NULL,Architecture INTEGER NOT NULL,ResourceId TEXT COLLATE NOCASE,Filename TEXT NOT NULL COLLATE NOCASE,"Offset" INTEGER NOT NULL,Size INTEGER NOT NULL,Flags INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB,FOREIGN KEY(Bundle) REFERENCES Bundle(_BundleID));
	BundlePackage
	_BundlePackageID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Bundle	INTEGER	INTEGER	
	PackageType	INTEGER	INTEGER	
	Version	INTEGER	INTEGER	
	Architecture	INTEGER	INTEGER	
	ResourceId	STRING	TEXT	
	Filename	STRING	TEXT	
	Offset	INTEGER	INTEGER	
	Size	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE BundleResource(_BundleResourceID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,BundlePackage INTEGER NOT NULL,Language TEXT COLLATE NOCASE,Scale INTEGER NOT NULL,DXFeatureLevel INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(BundlePackage) REFERENCES BundlePackage(_BundlePackageID));
	BundleResource
	_BundleResourceID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	BundlePackage	INTEGER	INTEGER	
	Language	STRING	TEXT	
	Scale	INTEGER	INTEGER	
	DXFeatureLevel	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE ConnectedSet(_ConnectedSetID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,Name TEXT NOT NULL COLLATE NOCASE,Flags INTEGER NOT NULL DEFAULT 0,Status INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB);
	ConnectedSet
	_ConnectedSetID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	Name	STRING	TEXT	
	Flags	INTEGER	INTEGER	
	Status	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE ConnectedSetPackageFamily(_ConnectedSetPackageFamilyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,ConnectedSet INTEGER NOT NULL,PackageFamily INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(ConnectedSet) REFERENCES ConnectedSet(_ConnectedSetID),FOREIGN KEY(PackageFamily) REFERENCES PackageFamily(_PackageFamilyID));
	ConnectedSetPackageFamily
	_ConnectedSetPackageFamilyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	ConnectedSet	INTEGER	INTEGER	
	PackageFamily	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE CustomInstallWork(_CustomInstallWorkID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,User INTEGER NOT NULL,Package INTEGER NOT NULL,Name TEXT NOT NULL COLLATE NOCASE,"Index" INTEGER NOT NULL,Flags INTEGER NOT NULL DEFAULT 0,Status INTEGER NOT NULL DEFAULT 0,File TEXT NOT NULL COLLATE NOCASE,Arguments TEXT COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(User) REFERENCES User(_UserID),FOREIGN KEY(Package) REFERENCES Package(_PackageID));
	CustomInstallWork
	_CustomInstallWorkID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Name	STRING	TEXT	
	Index	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	Status	INTEGER	INTEGER	
	File	STRING	TEXT	
	Arguments	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE DefaultTile(_DefaultTileID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Application INTEGER NOT NULL,UpdateRecurrence INTEGER NOT NULL DEFAULT 0,UpdateUriTemplate TEXT COLLATE NOCASE,ShowNameOnTiles INTEGER NOT NULL DEFAULT 0,ShortName TEXT COLLATE NOCASE,DefaultSize INTEGER NOT NULL DEFAULT 0,HoloContentChoice TEXT COLLATE NOCASE,MixedRealityModel TEXT COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(Application) REFERENCES Application(_ApplicationID));
	DefaultTile
	_DefaultTileID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Application	INTEGER	INTEGER	
	UpdateRecurrence	INTEGER	INTEGER	
	UpdateUriTemplate	STRING	TEXT	
	ShowNameOnTiles	INTEGER	INTEGER	
	ShortName	STRING	TEXT	
	DefaultSize	INTEGER	INTEGER	
	HoloContentChoice	STRING	TEXT	
	MixedRealityModel	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE Dependency(_DependencyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,DependentPackage INTEGER NOT NULL,"Index" INTEGER NOT NULL,DependencyType INTEGER NOT NULL DEFAULT 2,Name TEXT NOT NULL COLLATE NOCASE,Publisher TEXT COLLATE NOCASE,MinVersion INTEGER NOT NULL,MaxVersion INTEGER NOT NULL,Flags INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB,FOREIGN KEY(DependentPackage) REFERENCES Package(_PackageID));
	Dependency
	_DependencyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	DependentPackage	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	DependencyType	INTEGER	INTEGER	
	Name	STRING	TEXT	
	Publisher	STRING	TEXT	
	MinVersion	INTEGER	INTEGER	
	MaxVersion	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE DependencyGraph(_DependencyGraphID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,_ShadowId INTEGER NOT NULL DEFAULT 0,_IsMarkedForDeletion INTEGER NOT NULL DEFAULT 0,User INTEGER NOT NULL,DependentPackage INTEGER NOT NULL,"Index" INTEGER NOT NULL DEFAULT 0,SupplierPackage INTEGER NOT NULL,DependencyType INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(User) REFERENCES User(_UserID),FOREIGN KEY(DependentPackage) REFERENCES Package(_PackageID),FOREIGN KEY(SupplierPackage) REFERENCES Package(_PackageID));
	DependencyGraph
	_DependencyGraphID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	_ShadowId	INTEGER	INTEGER	
	_IsMarkedForDeletion	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	DependentPackage	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	SupplierPackage	INTEGER	INTEGER	
	DependencyType	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE DeploymentHistory(_DeploymentHistoryID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,PackageIdentity INTEGER NOT NULL,User INTEGER NOT NULL,HResult INTEGER NOT NULL,WhenOccurred INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(PackageIdentity) REFERENCES PackageIdentity(_PackageIdentityID),FOREIGN KEY(User) REFERENCES User(_UserID));
	DeploymentHistory
	_DeploymentHistoryID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	PackageIdentity	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	HResult	INTEGER	INTEGER	
	WhenOccurred	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE DynamicAppUriHandler(_DynamicAppUriHandlerID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,DynamicAppUriHandlerGroup INTEGER NOT NULL,HostName TEXT NOT NULL COLLATE NOCASE,Path TEXT COLLATE NOCASE,ProgID TEXT COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(DynamicAppUriHandlerGroup) REFERENCES DynamicAppUriHandlerGroup(_DynamicAppUriHandlerGroupID));
	DynamicAppUriHandler
	_DynamicAppUriHandlerID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	DynamicAppUriHandlerGroup	INTEGER	INTEGER	
	HostName	STRING	TEXT	
	Path	STRING	TEXT	
	ProgID	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE DynamicAppUriHandlerGroup(_DynamicAppUriHandlerGroupID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,User INTEGER NOT NULL,PackageFamily INTEGER NOT NULL,Name TEXT NOT NULL COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(User) REFERENCES User(_UserID),FOREIGN KEY(PackageFamily) REFERENCES PackageFamily(_PackageFamilyID));
	DynamicAppUriHandlerGroup
	_DynamicAppUriHandlerGroupID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	PackageFamily	INTEGER	INTEGER	
	Name	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE EndOfLifePackage(_EndOfLifePackage INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,PackageFamily INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(PackageFamily) REFERENCES PackageFamily(_PackageFamilyID));
	EndOfLifePackage
	_EndOfLifePackage	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	PackageFamily	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE Enterprise(_EnterpriseID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,EnterpriseId BLOB NOT NULL,_Dictionary BLOB);
	Enterprise
	_EnterpriseID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	EnterpriseId	BYTES	BLOB	
	_Dictionary	BYTES	BLOB	

CREATE TABLE FileTypeAssociation(_FileTypeAssociationID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,FileType TEXT NOT NULL COLLATE NOCASE,ContentType TEXT COLLATE NOCASE,Extension INTEGER NOT NULL,"Index" INTEGER NOT NULL,ProgID TEXT COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(Extension) REFERENCES ApplicationExtension(_ApplicationExtensionID));
	FileTypeAssociation
	_FileTypeAssociationID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	FileType	STRING	TEXT	
	ContentType	STRING	TEXT	
	Extension	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	ProgID	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE HostRuntime(_HostRuntimeID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,HostId TEXT NOT NULL COLLATE NOCASE,PackageExtension INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(PackageExtension) REFERENCES PackageExtension(_PackageExtensionID));
	HostRuntime
	_HostRuntimeID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	HostId	STRING	TEXT	
	PackageExtension	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE MigratorPatch(_MigratorPatchID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,PatchId TEXT NOT NULL COLLATE NOCASE,HResult INTEGER NOT NULL,StateRepositoryVersion INTEGER NOT NULL,"When" INTEGER NOT NULL,_Dictionary BLOB);
	MigratorPatch
	_MigratorPatchID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	PatchId	STRING	TEXT	
	HResult	INTEGER	INTEGER	
	StateRepositoryVersion	INTEGER	INTEGER	
	When	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE MrtApplication(_MrtApplicationID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Application INTEGER NOT NULL,DisplayNameReference TEXT NOT NULL,DescriptionReference TEXT NOT NULL,Square150x150LogoReference TEXT NOT NULL,Square44x44LogoReference TEXT NOT NULL,Wide310x150LogoReference TEXT,Square310x310LogoReference TEXT,Square71x71LogoReference TEXT,StartPageReference TEXT,SplashScreenImageReference TEXT,VisualGroupReference TEXT,_Dictionary BLOB,FOREIGN KEY(Application) REFERENCES Application(_ApplicationID));
	MrtApplication
	_MrtApplicationID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Application	INTEGER	INTEGER	
	DisplayNameReference	STRING	TEXT	
	DescriptionReference	STRING	TEXT	
	Square150x150LogoReference	STRING	TEXT	
	Square44x44LogoReference	STRING	TEXT	
	Wide310x150LogoReference	STRING	TEXT	
	Square310x310LogoReference	STRING	TEXT	
	Square71x71LogoReference	STRING	TEXT	
	StartPageReference	STRING	TEXT	
	SplashScreenImageReference	STRING	TEXT	
	VisualGroupReference	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE MrtDefaultTile(_MrtDefaultTileID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,DefaultTile INTEGER NOT NULL,ShortNameReference TEXT NOT NULL,_Dictionary BLOB,FOREIGN KEY(DefaultTile) REFERENCES DefaultTile(_DefaultTileID));
	MrtDefaultTile
	_MrtDefaultTileID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	DefaultTile	INTEGER	INTEGER	
	ShortNameReference	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE MrtPackage(_MrtPackageID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL,DisplayNameReference TEXT NOT NULL,PublisherDisplayNameReference TEXT NOT NULL,DescriptionReference TEXT,LogoReference TEXT NOT NULL,_Dictionary BLOB,FOREIGN KEY(Package) REFERENCES Package(_PackageID));
	MrtPackage
	_MrtPackageID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	DisplayNameReference	STRING	TEXT	
	PublisherDisplayNameReference	STRING	TEXT	
	DescriptionReference	STRING	TEXT	
	LogoReference	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE MrtSharedPri(_MrtSharedPriID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL,Filename TEXT NOT NULL COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(Package) REFERENCES Package(_PackageID));
	MrtSharedPri
	_MrtSharedPriID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Filename	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE MrtUserPri(_MrtUserPriID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL,User INTEGER NOT NULL,Filename TEXT NOT NULL COLLATE NOCASE,MrtSharedPri INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(Package) REFERENCES Package(_PackageID),FOREIGN KEY(User) REFERENCES User(_UserID),FOREIGN KEY(MrtSharedPri) REFERENCES MrtSharedPri(_MrtSharedPriID));
	MrtUserPri
	_MrtUserPriID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	Filename	STRING	TEXT	
	MrtSharedPri	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE NamedDependency(_NamedDependncyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,DependencyType INTEGER NOT NULL,Package INTEGER NOT NULL,"Index" INTEGER NOT NULL,Name TEXT NOT NULL COLLATE NOCASE,Version INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(Package) REFERENCES Package(_PackageID));
	NamedDependency
	_NamedDependncyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	DependencyType	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	Name	STRING	TEXT	
	Version	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE OptionalBundle(_OptionalBundleID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,MainBundle INTEGER NOT NULL,Name TEXT NOT NULL COLLATE NOCASE,Publisher TEXT NOT NULL,Version INTEGER NOT NULL,Filename TEXT COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(MainBundle) REFERENCES Bundle(_BundleID));
	OptionalBundle
	_OptionalBundleID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	MainBundle	INTEGER	INTEGER	
	Name	STRING	TEXT	
	Publisher	STRING	TEXT	
	Version	INTEGER	INTEGER	
	Filename	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE OptionalBundlePackage(_OptionalBundlePackageID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,OptionalBundle INTEGER NOT NULL DEFAULT 0,PackageType INTEGER NOT NULL DEFAULT 0,Version INTEGER NOT NULL,Architecture INTEGER NOT NULL,ResourceId TEXT COLLATE NOCASE,Filename TEXT NOT NULL COLLATE NOCASE,"Offset" INTEGER NOT NULL,Size INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(OptionalBundle) REFERENCES OptionalBundle(_OptionalBundleID));
	OptionalBundlePackage
	_OptionalBundlePackageID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	OptionalBundle	INTEGER	INTEGER	
	PackageType	INTEGER	INTEGER	
	Version	INTEGER	INTEGER	
	Architecture	INTEGER	INTEGER	
	ResourceId	STRING	TEXT	
	Filename	STRING	TEXT	
	Offset	INTEGER	INTEGER	
	Size	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE OptionalBundleResource(_OptionalBundleResourceID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,OptionalBundlePackage INTEGER NOT NULL,Language TEXT COLLATE NOCASE,Scale INTEGER NOT NULL,DXFeatureLevel INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(OptionalBundlePackage) REFERENCES OptionalBundlePackage(_OptionalBundlePackageID));
	OptionalBundleResource
	_OptionalBundleResourceID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	OptionalBundlePackage	INTEGER	INTEGER	
	Language	STRING	TEXT	
	Scale	INTEGER	INTEGER	
	DXFeatureLevel	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE Package(_PackageID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,PackageFamily INTEGER NOT NULL,ResourceId TEXT COLLATE NOCASE,Architecture INTEGER NOT NULL,Version INTEGER NOT NULL,PackageFullName TEXT NOT NULL COLLATE NOCASE,IsInbox INTEGER NOT NULL,PackageType INTEGER NOT NULL DEFAULT 0,Flags INTEGER NOT NULL DEFAULT 0,Flags2 INTEGER NOT NULL DEFAULT 0,DisplayName TEXT NOT NULL,PublisherDisplayName TEXT NOT NULL,Description TEXT,Logo TEXT NOT NULL COLLATE NOCASE,OSMinVersion INTEGER NOT NULL,OSMaxVersionTested INTEGER NOT NULL,TargetDeviceFamily INTEGER NOT NULL DEFAULT 0,Capabilities INTEGER NOT NULL,SupportedUsers INTEGER NOT NULL DEFAULT 0,SignatureOrigin INTEGER NOT NULL DEFAULT 0,PackageOrigin INTEGER NOT NULL DEFAULT 0,Enterprise INTEGER NOT NULL DEFAULT 0,SourceBundle INTEGER NOT NULL DEFAULT 0,EditionId TEXT COLLATE NOCASE,OSVersionWhenIndexed INTEGER NOT NULL DEFAULT 0,InPlaceUpdateBaseline INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB,FOREIGN KEY(PackageFamily) REFERENCES PackageFamily(_PackageFamilyID),FOREIGN KEY(Enterprise) REFERENCES Enterprise(_EnterpriseID));
	Package
	_PackageID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	PackageFamily	INTEGER	INTEGER	
	ResourceId	STRING	TEXT	
	Architecture	INTEGER	INTEGER	
	Version	INTEGER	INTEGER	
	PackageFullName	STRING	TEXT	
	IsInbox	INTEGER	INTEGER	
	PackageType	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	Flags2	INTEGER	INTEGER	
	DisplayName	STRING	TEXT	
	PublisherDisplayName	STRING	TEXT	
	Description	STRING	TEXT	
	Logo	STRING	TEXT	
	OSMinVersion	INTEGER	INTEGER	
	OSMaxVersionTested	INTEGER	INTEGER	
	TargetDeviceFamily	INTEGER	INTEGER	
	Capabilities	INTEGER	INTEGER	
	SupportedUsers	INTEGER	INTEGER	
	SignatureOrigin	INTEGER	INTEGER	
	PackageOrigin	INTEGER	INTEGER	
	Enterprise	INTEGER	INTEGER	
	SourceBundle	INTEGER	INTEGER	
	EditionId	STRING	TEXT	
	OSVersionWhenIndexed	INTEGER	INTEGER	
	InPlaceUpdateBaseline	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageDependency(_PackageDependencyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,PackageDependencyId TEXT NOT NULL COLLATE NOCASE,User INTEGER NOT NULL DEFAULT 0,PackageFamilyName TEXT NOT NULL COLLATE NOCASE,PackageFamily INTEGER NOT NULL,MinVersion INTEGER NOT NULL,Architectures INTEGER NOT NULL DEFAULT 0,LifetimeKind INTEGER NOT NULL DEFAULT 0,LifetimeArtifact TEXT COLLATE NOCASE,Flags INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB,FOREIGN KEY(User) REFERENCES User(_UserID),FOREIGN KEY(PackageFamily) REFERENCES PackageFamily(_PackageFamilyID));
	PackageDependency
	_PackageDependencyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	PackageDependencyId	STRING	TEXT	
	User	INTEGER	INTEGER	
	PackageFamilyName	STRING	TEXT	
	PackageFamily	INTEGER	INTEGER	
	MinVersion	INTEGER	INTEGER	
	Architectures	INTEGER	INTEGER	
	LifetimeKind	INTEGER	INTEGER	
	LifetimeArtifact	STRING	TEXT	
	Flags	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageExtension(_PackageExtensionID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL,"Index" INTEGER NOT NULL,Category TEXT NOT NULL COLLATE NOCASE,Activation INTEGER NOT NULL DEFAULT 0,HostId TEXT COLLATE NOCASE,Executable TEXT COLLATE NOCASE,Entrypoint TEXT,RuntimeType TEXT COLLATE NOCASE,StartPage TEXT COLLATE NOCASE,Flags INTEGER NOT NULL DEFAULT 0,Parameters TEXT COLLATE NOCASE,CurrentDirectoryPath TEXT COLLATE NOCASE,Id TEXT COLLATE NOCASE,ResourceGroup TEXT COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(Package) REFERENCES Package(_PackageID),FOREIGN KEY(Activation) REFERENCES Activation(_ActivationID));
	PackageExtension
	_PackageExtensionID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	Category	STRING	TEXT	
	Activation	INTEGER	INTEGER	
	HostId	STRING	TEXT	
	Executable	STRING	TEXT	
	Entrypoint	STRING	TEXT	
	RuntimeType	STRING	TEXT	
	StartPage	STRING	TEXT	
	Flags	INTEGER	INTEGER	
	Parameters	STRING	TEXT	
	CurrentDirectoryPath	STRING	TEXT	
	Id	STRING	TEXT	
	ResourceGroup	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageExternalLocation(_PackageExternalLocationID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,User INTEGER NOT NULL,Package INTEGER NOT NULL,Path TEXT NOT NULL COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(User) REFERENCES User(_UserID),FOREIGN KEY(Package) REFERENCES Package(_PackageID));
	PackageExternalLocation
	_PackageExternalLocationID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Path	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageFamily(_PackageFamilyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,Name TEXT NOT NULL COLLATE NOCASE,Publisher TEXT NOT NULL,PublisherId TEXT NOT NULL COLLATE NOCASE,PackageFamilyName TEXT NOT NULL COLLATE NOCASE,PackageSID BLOB NOT NULL,_Dictionary BLOB);
	PackageFamily
	_PackageFamilyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	Name	STRING	TEXT	
	Publisher	STRING	TEXT	
	PublisherId	STRING	TEXT	
	PackageFamilyName	STRING	TEXT	
	PackageSID	BYTES	BLOB	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageFamilyPolicy(_PackageFamilyPolicyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,User INTEGER NOT NULL DEFAULT 0,PackageFamily INTEGER NOT NULL,Name TEXT NOT NULL COLLATE NOCASE,"Index" INTEGER NOT NULL,ValueSTRING TEXT COLLATE NOCASE,ValueNumber INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB,FOREIGN KEY(User) REFERENCES User(_UserID),FOREIGN KEY(PackageFamily) REFERENCES PackageFamily(_PackageFamilyID));
	PackageFamilyPolicy
	_PackageFamilyPolicyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	PackageFamily	INTEGER	INTEGER	
	Name	STRING	TEXT	
	Index	INTEGER	INTEGER	
	ValueSTRING	STRING	TEXT	
	ValueNumber	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageFamilyUser(_PackageFamilyUserID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,PackageFamily INTEGER NOT NULL,User INTEGER NOT NULL,WhenInstalled INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(PackageFamily) REFERENCES PackageFamily(_PackageFamilyID),FOREIGN KEY(User) REFERENCES User(_UserID));
	PackageFamilyUser
	_PackageFamilyUserID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	PackageFamily	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	WhenInstalled	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageFamilyUserResource(_PackageFamilyUserResourceID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,PackageFamilyUser INTEGER NOT NULL,ResourceId TEXT NOT NULL COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(PackageFamilyUser) REFERENCES PackageFamilyUser(_PackageFamilyUserID));
	PackageFamilyUserResource
	_PackageFamilyUserResourceID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	PackageFamilyUser	INTEGER	INTEGER	
	ResourceId	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageIdentity(_PackageIdentityID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,PackageFamily INTEGER NOT NULL,PackageFullName TEXT NOT NULL COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(PackageFamily) REFERENCES PackageFamily(_PackageFamilyID));
	PackageIdentity
	_PackageIdentityID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	PackageFamily	INTEGER	INTEGER	
	PackageFullName	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageLocation(_PackageLocationID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL,Volume INTEGER NOT NULL,InstalledLocation TEXT NOT NULL COLLATE NOCASE,MutableLink TEXT COLLATE NOCASE,MutableLocation TEXT COLLATE NOCASE,ProjectionId TEXT COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(Package) REFERENCES Package(_PackageID));
	PackageLocation
	_PackageLocationID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Volume	INTEGER	INTEGER	
	InstalledLocation	STRING	TEXT	
	MutableLink	STRING	TEXT	
	MutableLocation	STRING	TEXT	
	ProjectionId	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageMachineStatus(_PackageMachineStatusID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,PackageIdentity INTEGER NOT NULL DEFAULT 0,Status INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB,FOREIGN KEY(PackageIdentity) REFERENCES PackageIdentity(_PackageIdentityID));
	PackageMachineStatus
	_PackageMachineStatusID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	PackageIdentity	INTEGER	INTEGER	
	Status	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackagePolicy(_PackagePolicyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,User INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL,Name TEXT NOT NULL COLLATE NOCASE,"Index" INTEGER NOT NULL,ValueSTRING TEXT COLLATE NOCASE,ValueNumber INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB,FOREIGN KEY(User) REFERENCES User(_UserID),FOREIGN KEY(Package) REFERENCES Package(_PackageID));
	PackagePolicy
	_PackagePolicyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Name	STRING	TEXT	
	Index	INTEGER	INTEGER	
	ValueSTRING	STRING	TEXT	
	ValueNumber	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageProperty(_PackagePropertyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL,"Index" INTEGER NOT NULL,Name TEXT NOT NULL COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(Package) REFERENCES Package(_PackageID));
	PackageProperty
	_PackagePropertyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	Name	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageSuperceded(_PackageSupercededID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,PackageIdentity INTEGER NOT NULL,User INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(PackageIdentity) REFERENCES PackageIdentity(_PackageIdentityID),FOREIGN KEY(User) REFERENCES User(_UserID));
	PackageSuperceded
	_PackageSupercededID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	PackageIdentity	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageUser(_PackageUserID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL,User INTEGER NOT NULL,InstallTime INTEGER NOT NULL,OSVersionWhenInstalled INTEGER NOT NULL DEFAULT 0,WhenRestored INTEGER,IsExplicitlyInstalled INTEGER NOT NULL,DeploymentState INTEGER NOT NULL DEFAULT 0,AppDataVolume INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(Package) REFERENCES Package(_PackageID),FOREIGN KEY(User) REFERENCES User(_UserID));
	PackageUser
	_PackageUserID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	InstallTime	INTEGER	INTEGER	
	OSVersionWhenInstalled	INTEGER	INTEGER	
	WhenRestored	INTEGER	INTEGER	
	IsExplicitlyInstalled	INTEGER	INTEGER	
	DeploymentState	INTEGER	INTEGER	
	AppDataVolume	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageUserStatus(_PackageUserStatusID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,PackageIdentity INTEGER NOT NULL DEFAULT 0,User INTEGER NOT NULL DEFAULT 0,Status INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB,FOREIGN KEY(PackageIdentity) REFERENCES PackageIdentity(_PackageIdentityID),FOREIGN KEY(User) REFERENCES User(_UserID));
	PackageUserStatus
	_PackageUserStatusID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	PackageIdentity	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	Status	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PrimaryTile(_PrimaryTileID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Application INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL DEFAULT 0,Flags INTEGER NOT NULL DEFAULT 0,TileTemplate INTEGER NOT NULL DEFAULT 0,TileId TEXT NOT NULL COLLATE NOCASE,Arguments TEXT COLLATE NOCASE,EditionId TEXT COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(Application) REFERENCES Application(_ApplicationID),FOREIGN KEY(Package) REFERENCES Package(_PackageID));
	PrimaryTile
	_PrimaryTileID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Application	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	TileTemplate	INTEGER	INTEGER	
	TileId	STRING	TEXT	
	Arguments	STRING	TEXT	
	EditionId	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PrimaryTileUser(_PrimaryTileUserID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,_Created INTEGER NOT NULL DEFAULT 0,_Modified INTEGER NOT NULL DEFAULT 0,User INTEGER NOT NULL,ApplicationIdentity INTEGER NOT NULL,State INTEGER NOT NULL DEFAULT 0,TileUniqueId BLOB NOT NULL,_Dictionary BLOB,FOREIGN KEY(User) REFERENCES User(_UserID),FOREIGN KEY(ApplicationIdentity) REFERENCES ApplicationIdentity(_ApplicationIdentityID));
	PrimaryTileUser
	_PrimaryTileUserID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	_Created	INTEGER	INTEGER	
	_Modified	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	ApplicationIdentity	INTEGER	INTEGER	
	State	INTEGER	INTEGER	
	TileUniqueId	BYTES	BLOB	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PrimaryTileUserChangelog(_PrimaryTileUserChangelogID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,_Created INTEGER NOT NULL,_Deleted INTEGER NOT NULL,User INTEGER NOT NULL,TileUniqueId BLOB NOT NULL,WhenOccurred INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(User) REFERENCES User(_UserID));
	PrimaryTileUserChangelog
	_PrimaryTileUserChangelogID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	_Created	INTEGER	INTEGER	
	_Deleted	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	TileUniqueId	BYTES	BLOB	
	WhenOccurred	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE Protocol(_ProtocolID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,ProtocolName TEXT NOT NULL COLLATE NOCASE,ReturnResults INTEGER NOT NULL DEFAULT 0,Extension INTEGER NOT NULL,"Index" INTEGER NOT NULL,ProgID TEXT COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(Extension) REFERENCES ApplicationExtension(_ApplicationExtensionID));
	Protocol
	_ProtocolID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	ProtocolName	STRING	TEXT	
	ReturnResults	INTEGER	INTEGER	
	Extension	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	ProgID	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE ProvisionedPackage(_ProvisionedPackageID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,PackageIdentity INTEGER NOT NULL,Flags INTEGER NOT NULL DEFAULT 0,Path TEXT NOT NULL COLLATE NOCASE,SignatureOrigin INTEGER NOT NULL DEFAULT 0,Region TEXT COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(PackageIdentity) REFERENCES PackageIdentity(_PackageIdentityID));
	ProvisionedPackage
	_ProvisionedPackageID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	PackageIdentity	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	Path	STRING	TEXT	
	SignatureOrigin	INTEGER	INTEGER	
	Region	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE ProvisionedPackageDeleted(_ProvisionedPackageID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,PackageIdentity INTEGER NOT NULL,Flags INTEGER NOT NULL DEFAULT 0,Path TEXT NOT NULL COLLATE NOCASE,SignatureOrigin INTEGER NOT NULL DEFAULT 0,Region TEXT COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(PackageIdentity) REFERENCES PackageIdentity(_PackageIdentityID));
	ProvisionedPackageDeleted
	_ProvisionedPackageID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	PackageIdentity	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	Path	STRING	TEXT	
	SignatureOrigin	INTEGER	INTEGER	
	Region	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE ProvisionedPackageExclude(_ProvisionedPackageExcludeID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,User INTEGER NOT NULL,PackageFamily INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(User) REFERENCES User(_UserID),FOREIGN KEY(PackageFamily) REFERENCES PackageFamily(_PackageFamilyID));
	ProvisionedPackageExclude
	_ProvisionedPackageExcludeID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	PackageFamily	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PublisherCacheFolder(_PublisherCacheFolderID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,PackageExtension INTEGER NOT NULL,"Index" INTEGER NOT NULL,FolderName TEXT COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(PackageExtension) REFERENCES PackageExtension(_PackageExtensionID));
	PublisherCacheFolder
	_PublisherCacheFolderID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	PackageExtension	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	FolderName	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE Resource(_ResourceID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL,"Index" INTEGER NOT NULL,Language TEXT NOT NULL COLLATE NOCASE,_Dictionary BLOB,FOREIGN KEY(Package) REFERENCES Package(_PackageID));
	Resource
	_ResourceID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	Language	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE SRHistory(_SRHistoryID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,"Action" INTEGER NOT NULL DEFAULT 0,Flags INTEGER NOT NULL DEFAULT 0,PackageIdentity INTEGER NOT NULL,User INTEGER NOT NULL,ActivityId BLOB,HResult INTEGER NOT NULL,WhenOccurred INTEGER NOT NULL,SequenceId INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(PackageIdentity) REFERENCES PackageIdentity(_PackageIdentityID),FOREIGN KEY(User) REFERENCES User(_UserID));
	SRHistory
	_SRHistoryID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Action	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	PackageIdentity	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	ActivityId	BYTES	BLOB	
	HResult	INTEGER	INTEGER	
	WhenOccurred	INTEGER	INTEGER	
	SequenceId	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE SRJournal(_SRJournalID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,ObjectType INTEGER NOT NULL DEFAULT 0,"Action" INTEGER NOT NULL DEFAULT 0,ObjectId INTEGER NOT NULL,Flags INTEGER NOT NULL DEFAULT 0,User INTEGER NOT NULL DEFAULT 0,PackageFamily INTEGER NOT NULL DEFAULT 0,PackageIdentity INTEGER NOT NULL DEFAULT 0,ApplicationIdentity INTEGER NOT NULL DEFAULT 0,Application INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL DEFAULT 0,PackageUser INTEGER NOT NULL DEFAULT 0,WhenOccurred INTEGER NOT NULL,SequenceId INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(User) REFERENCES User(_UserID),FOREIGN KEY(PackageFamily) REFERENCES PackageFamily(_PackageFamilyID),FOREIGN KEY(PackageIdentity) REFERENCES PackageIdentity(_PackageIdentityID),FOREIGN KEY(ApplicationIdentity) REFERENCES ApplicationIdentity(_ApplicationIdentityID),FOREIGN KEY(Application) REFERENCES Application(_ApplicationID),FOREIGN KEY(Package) REFERENCES Package(_PackageID),FOREIGN KEY(PackageUser) REFERENCES PackageUser(_PackageUserID));
	SRJournal
	_SRJournalID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	ObjectType	INTEGER	INTEGER	
	Action	INTEGER	INTEGER	
	ObjectId	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	PackageFamily	INTEGER	INTEGER	
	PackageIdentity	INTEGER	INTEGER	
	ApplicationIdentity	INTEGER	INTEGER	
	Application	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	PackageUser	INTEGER	INTEGER	
	WhenOccurred	INTEGER	INTEGER	
	SequenceId	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE SRJournalArchive(_SRJournalArchiveID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL,ObjectType INTEGER NOT NULL DEFAULT 0,"Action" INTEGER NOT NULL DEFAULT 0,ObjectId INTEGER NOT NULL,Flags INTEGER NOT NULL DEFAULT 0,User INTEGER NOT NULL,PackageFamily INTEGER NOT NULL,PackageIdentity INTEGER NOT NULL,ApplicationIdentity INTEGER NOT NULL,Application INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL DEFAULT 0,PackageUser INTEGER NOT NULL DEFAULT 0,WhenOccurred INTEGER NOT NULL,SequenceId INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(User) REFERENCES User(_UserID),FOREIGN KEY(PackageFamily) REFERENCES PackageFamily(_PackageFamilyID),FOREIGN KEY(PackageIdentity) REFERENCES PackageIdentity(_PackageIdentityID),FOREIGN KEY(ApplicationIdentity) REFERENCES ApplicationIdentity(_ApplicationIdentityID),FOREIGN KEY(Application) REFERENCES Application(_ApplicationID),FOREIGN KEY(Package) REFERENCES Package(_PackageID),FOREIGN KEY(PackageUser) REFERENCES PackageUser(_PackageUserID));
	SRJournalArchive
	_SRJournalArchiveID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	ObjectType	INTEGER	INTEGER	
	Action	INTEGER	INTEGER	
	ObjectId	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	PackageFamily	INTEGER	INTEGER	
	PackageIdentity	INTEGER	INTEGER	
	ApplicationIdentity	INTEGER	INTEGER	
	Application	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	PackageUser	INTEGER	INTEGER	
	WhenOccurred	INTEGER	INTEGER	
	SequenceId	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE SecondaryTile(_SecondaryTileID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Flags INTEGER NOT NULL DEFAULT 0,TileTemplate INTEGER NOT NULL DEFAULT 0,TileId TEXT NOT NULL COLLATE NOCASE,Arguments TEXT COLLATE NOCASE,EditionId TEXT COLLATE NOCASE,_Dictionary BLOB);
	SecondaryTile
	_SecondaryTileID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	TileTemplate	INTEGER	INTEGER	
	TileId	STRING	TEXT	
	Arguments	STRING	TEXT	
	EditionId	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE SecondaryTileUser(_SecondaryTileUserID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,_Created INTEGER NOT NULL DEFAULT 0,_Modified INTEGER NOT NULL DEFAULT 0,SecondaryTile INTEGER NOT NULL,User INTEGER NOT NULL,ApplicationIdentity INTEGER NOT NULL,State INTEGER NOT NULL DEFAULT 0,TileUniqueId BLOB NOT NULL,_Dictionary BLOB,FOREIGN KEY(SecondaryTile) REFERENCES SecondaryTile(_SecondaryTileID),FOREIGN KEY(User) REFERENCES User(_UserID),FOREIGN KEY(ApplicationIdentity) REFERENCES ApplicationIdentity(_ApplicationIdentityID));
	SecondaryTileUser
	_SecondaryTileUserID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	_Created	INTEGER	INTEGER	
	_Modified	INTEGER	INTEGER	
	SecondaryTile	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	ApplicationIdentity	INTEGER	INTEGER	
	State	INTEGER	INTEGER	
	TileUniqueId	BYTES	BLOB	
	_Dictionary	BYTES	BLOB	

CREATE TABLE SecondaryTileUserChangelog(_SecondaryTileUserChangelogID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,_Created INTEGER NOT NULL,_Deleted INTEGER NOT NULL,User INTEGER NOT NULL,TileUniqueId BLOB NOT NULL,WhenOccurred INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(User) REFERENCES User(_UserID));
	SecondaryTileUserChangelog
	_SecondaryTileUserChangelogID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	_Created	INTEGER	INTEGER	
	_Deleted	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	TileUniqueId	BYTES	BLOB	
	WhenOccurred	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE Sequence(_SequenceID INTEGER PRIMARY KEY NOT NULL,Id INTEGER NOT NULL,LastValue INTEGER NOT NULL);
	Sequence
	_SequenceID	INTEGER	INTEGER	PRIMARY ROWID
	Id	INTEGER	INTEGER	
	LastValue	INTEGER	INTEGER	

CREATE TABLE SharedPackageContainer(_SharedPackageContainerID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Id TEXT NOT NULL COLLATE NOCASE,Name TEXT NOT NULL COLLATE NOCASE,User INTEGER NOT NULL,Status INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB,FOREIGN KEY(User) REFERENCES User(_UserID));
	SharedPackageContainer
	_SharedPackageContainerID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Id	STRING	TEXT	
	Name	STRING	TEXT	
	User	INTEGER	INTEGER	
	Status	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE SharedPackageContainerPackageFamily(_SharedPackageContainerPackageFamilyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,SharedPackageContainer INTEGER NOT NULL,PackageFamilyName TEXT NOT NULL COLLATE NOCASE,"Index" INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(SharedPackageContainer) REFERENCES SharedPackageContainer(_SharedPackageContainerID));
	SharedPackageContainerPackageFamily
	_SharedPackageContainerPackageFamilyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	SharedPackageContainer	INTEGER	INTEGER	
	PackageFamilyName	STRING	TEXT	
	Index	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE TargetDeviceFamily(_TargetDeviceFamilyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL,"Index" INTEGER NOT NULL,Name INTEGER NOT NULL,MinVersion INTEGER NOT NULL,MaxVersion INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(Package) REFERENCES Package(_PackageID));
	TargetDeviceFamily
	_TargetDeviceFamilyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	Name	INTEGER	INTEGER	
	MinVersion	INTEGER	INTEGER	
	MaxVersion	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE User(_UserID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,UserSid BLOB NOT NULL,_Dictionary BLOB);
	User
	_UserID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	UserSid	BYTES	BLOB	
	_Dictionary	BYTES	BLOB	

CREATE TABLE WorkInProgress(_WorkInProgressID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,"Key" TEXT COLLATE NOCASE,_Dictionary BLOB);
	WorkInProgress
	_WorkInProgressID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	Key	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE WowDependencyGraph(_WowDependencyGraphID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,_ShadowId INTEGER NOT NULL DEFAULT 0,_IsMarkedForDeletion INTEGER NOT NULL DEFAULT 0,User INTEGER NOT NULL,DependentPackage INTEGER NOT NULL,"Index" INTEGER NOT NULL DEFAULT 0,SupplierPackage INTEGER NOT NULL,DependencyType INTEGER NOT NULL,_Dictionary BLOB,FOREIGN KEY(User) REFERENCES User(_UserID),FOREIGN KEY(DependentPackage) REFERENCES Package(_PackageID),FOREIGN KEY(SupplierPackage) REFERENCES Package(_PackageID));
	WowDependencyGraph
	_WowDependencyGraphID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	_ShadowId	INTEGER	INTEGER	
	_IsMarkedForDeletion	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	DependentPackage	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	SupplierPackage	INTEGER	INTEGER	
	DependencyType	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE XboxPackage(_XboxPackageID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,_WorkId INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL DEFAULT 0,EditionId TEXT NOT NULL COLLATE NOCASE,BuildId BLOB NOT NULL,DeviceId BLOB NOT NULL,BuildVersion INTEGER NOT NULL,ContentId BLOB NOT NULL,ProductId BLOB NOT NULL,MediaId TEXT COLLATE NOCASE,PackageSize INTEGER NOT NULL DEFAULT 0,TitleId INTEGER DEFAULT 0,PrimaryServiceConfigId BLOB,EraVersion INTEGER NOT NULL DEFAULT 0,EscrowedKeyBlobId BLOB,_Dictionary BLOB,FOREIGN KEY(Package) REFERENCES Package(_PackageID));
	XboxPackage
	_XboxPackageID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	EditionId	STRING	TEXT	
	BuildId	BYTES	BLOB	
	DeviceId	BYTES	BLOB	
	BuildVersion	INTEGER	INTEGER	
	ContentId	BYTES	BLOB	
	ProductId	BYTES	BLOB	
	MediaId	STRING	TEXT	
	PackageSize	INTEGER	INTEGER	
	TitleId	INTEGER	INTEGER	
	PrimaryServiceConfigId	BYTES	BLOB	
	EraVersion	INTEGER	INTEGER	
	EscrowedKeyBlobId	BYTES	BLOB	
	_Dictionary	BYTES	BLOB	
