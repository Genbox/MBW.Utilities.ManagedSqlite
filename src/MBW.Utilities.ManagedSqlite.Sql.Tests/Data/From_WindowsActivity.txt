# SQL
#    Table Name
#    Column1Name
#    Column2Name ClrType(Integer, String, Bytes, Double) SqlType Modifiers(Primary, RowId)
# 
CREATE TABLE ActivityContext(_ActivityContextID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,ProductId BLOB,IsCancelled INTEGER,IsFinished INTEGER,IsNativeapp INTEGER,IsRollback INTEGER,IsSignaturevalid INTEGER,IsSlmapp INTEGER,IsXnaApp INTEGER,HRExecute INTEGER,HRRollback INTEGER,OldManifest TEXT COLLATE NOCASE,XapFilePath TEXT COLLATE NOCASE,PBPlayReadyHeader BLOB,CApplication INTEGER,PApplication BLOB,CListTasks INTEGER,ListTasks BLOB,CListTokens INTEGER,ListTokens BLOB,ListCapabilities TEXT,PBLicense BLOB,ActivityType INTEGER,OrchestratorType TEXT,CRecoveryOfUninstall INTEGER,IsFromStore INTEGER,CListExtensions INTEGER,ListExtensions BLOB,CListBSAs INTEGER,ListBSAs BLOB,AppManifest TEXT COLLATE NOCASE,ExtractedXapFilePath TEXT COLLATE NOCASE,CListRegistryValues INTEGER,ListRegistryValues BLOB,_Dictionary BLOB);
	ActivityContext
	_ActivityContextID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	ProductId	BYTES	BLOB	
	IsCancelled	INTEGER	INTEGER	
	IsFinished	INTEGER	INTEGER	
	IsNativeapp	INTEGER	INTEGER	
	IsRollback	INTEGER	INTEGER	
	IsSignaturevalid	INTEGER	INTEGER	
	IsSlmapp	INTEGER	INTEGER	
	IsXnaApp	INTEGER	INTEGER	
	HRExecute	INTEGER	INTEGER	
	HRRollback	INTEGER	INTEGER	
	OldManifest	STRING	TEXT	
	XapFilePath	STRING	TEXT	
	PBPlayReadyHeader	BYTES	BLOB	
	CApplication	INTEGER	INTEGER	
	PApplication	BYTES	BLOB	
	CListTasks	INTEGER	INTEGER	
	ListTasks	BYTES	BLOB	
	CListTokens	INTEGER	INTEGER	
	ListTokens	BYTES	BLOB	
	ListCapabilities	STRING	TEXT	
	PBLicense	BYTES	BLOB	
	ActivityType	INTEGER	INTEGER	
	OrchestratorType	STRING	TEXT	
	CRecoveryOfUninstall	INTEGER	INTEGER	
	IsFromStore	INTEGER	INTEGER	
	CListExtensions	INTEGER	INTEGER	
	ListExtensions	BYTES	BLOB	
	CListBSAs	INTEGER	INTEGER	
	ListBSAs	BYTES	BLOB	
	AppManifest	STRING	TEXT	
	ExtractedXapFilePath	STRING	TEXT	
	CListRegistryValues	INTEGER	INTEGER	
	ListRegistryValues	BYTES	BLOB	
	_Dictionary	BYTES	BLOB	

CREATE TABLE AppExecutionAlias(_AppExecutionAliasID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Alias TEXT NOT NULL COLLATE NOCASE,Extension INTEGER NOT NULL,_Dictionary BLOB);
	AppExecutionAlias
	_AppExecutionAliasID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Alias	STRING	TEXT	
	Extension	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE AppExecutionAliasUser(_AppExecutionAliasUserID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,User INTEGER NOT NULL,ApplicationIdentity INTEGER NOT NULL,Status INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB);
	AppExecutionAliasUser
	_AppExecutionAliasUserID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	ApplicationIdentity	INTEGER	INTEGER	
	Status	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE AppExtension(_AppExtensionID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Name TEXT NOT NULL COLLATE NOCASE,Id TEXT NOT NULL COLLATE NOCASE,PublicFolder TEXT NOT NULL COLLATE NOCASE,DisplayName TEXT NOT NULL,Description TEXT,Extension INTEGER NOT NULL,_Dictionary BLOB);
	AppExtension
	_AppExtensionID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Name	STRING	TEXT	
	Id	STRING	TEXT	
	PublicFolder	STRING	TEXT	
	DisplayName	STRING	TEXT	
	Description	STRING	TEXT	
	Extension	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE AppExtensionHost(_AppExtensionHostID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Extension INTEGER NOT NULL,Name TEXT NOT NULL COLLATE NOCASE,_Dictionary BLOB);
	AppExtensionHost
	_AppExtensionHostID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Extension	INTEGER	INTEGER	
	Name	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE AppService(_AppServiceID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Name TEXT NOT NULL COLLATE NOCASE,Extension INTEGER NOT NULL,"Index" INTEGER NOT NULL,_Dictionary BLOB);
	AppService
	_AppServiceID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Name	STRING	TEXT	
	Extension	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE AppUriHandler(_AppUriHandlerID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,HostName TEXT NOT NULL COLLATE NOCASE,Extension INTEGER NOT NULL,ProgID TEXT COLLATE NOCASE,_Dictionary BLOB);
	AppUriHandler
	_AppUriHandlerID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	HostName	STRING	TEXT	
	Extension	INTEGER	INTEGER	
	ProgID	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE Application(_ApplicationID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Package INTEGER NOT NULL,"Index" INTEGER NOT NULL,ApplicationType INTEGER NOT NULL DEFAULT 0,Flags INTEGER NOT NULL DEFAULT 0,Subsystem INTEGER NOT NULL DEFAULT 0,PackageRelativeApplicationId TEXT NOT NULL COLLATE NOCASE,ApplicationUserModelId TEXT NOT NULL COLLATE NOCASE,DisplayName TEXT NOT NULL,Description TEXT NOT NULL,Square150x150Logo TEXT COLLATE NOCASE,Square44x44Logo TEXT NOT NULL COLLATE NOCASE,Wide310x150Logo TEXT COLLATE NOCASE,Square310x310Logo TEXT COLLATE NOCASE,Square71x71Logo TEXT COLLATE NOCASE,ForegroundText TEXT,BackgroundColor INTEGER NOT NULL,Executable TEXT COLLATE NOCASE,Entrypoint TEXT,StartPage TEXT COLLATE NOCASE,ResourceGroup TEXT COLLATE NOCASE,LockScreenNotification INTEGER NOT NULL DEFAULT 0,LockScreenBadgeLogo TEXT COLLATE NOCASE,SplashScreenImage TEXT COLLATE NOCASE,SplashScreenBackgroundColor INTEGER NOT NULL DEFAULT 0,InitialRotationPreference INTEGER NOT NULL DEFAULT 0,ApplicationViewMinWidth INTEGER NOT NULL DEFAULT 0,AppListEntry INTEGER NOT NULL DEFAULT 0,EditionId TEXT COLLATE NOCASE,VisualGroup TEXT COLLATE NOCASE,_Dictionary BLOB);
	Application
	_ApplicationID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	ApplicationType	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	Subsystem	INTEGER	INTEGER	
	PackageRelativeApplicationId	STRING	TEXT	
	ApplicationUserModelId	STRING	TEXT	
	DisplayName	STRING	TEXT	
	Description	STRING	TEXT	
	Square150x150Logo	STRING	TEXT	
	Square44x44Logo	STRING	TEXT	
	Wide310x150Logo	STRING	TEXT	
	Square310x310Logo	STRING	TEXT	
	Square71x71Logo	STRING	TEXT	
	ForegroundText	STRING	TEXT	
	BackgroundColor	INTEGER	INTEGER	
	Executable	STRING	TEXT	
	Entrypoint	STRING	TEXT	
	StartPage	STRING	TEXT	
	ResourceGroup	STRING	TEXT	
	LockScreenNotification	INTEGER	INTEGER	
	LockScreenBadgeLogo	STRING	TEXT	
	SplashScreenImage	STRING	TEXT	
	SplashScreenBackgroundColor	INTEGER	INTEGER	
	InitialRotationPreference	INTEGER	INTEGER	
	ApplicationViewMinWidth	INTEGER	INTEGER	
	AppListEntry	INTEGER	INTEGER	
	EditionId	STRING	TEXT	
	VisualGroup	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE ApplicationBackgroundTask(_BackgroundTaskID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Type TEXT NOT NULL COLLATE NOCASE,Extension INTEGER NOT NULL,"Index" INTEGER NOT NULL,_Dictionary BLOB);
	ApplicationBackgroundTask
	_BackgroundTaskID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Type	STRING	TEXT	
	Extension	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE ApplicationContentUriRule(_ApplicationContentUriRuleID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Application INTEGER NOT NULL,"Index" INTEGER NOT NULL,Uri TEXT NOT NULL,Type INTEGER NOT NULL,WindowsRuntimeAccess INTEGER NOT NULL DEFAULT 0,Flags INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB);
	ApplicationContentUriRule
	_ApplicationContentUriRuleID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Application	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	Uri	STRING	TEXT	
	Type	INTEGER	INTEGER	
	WindowsRuntimeAccess	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE ApplicationExtension(_ApplicationExtensionID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Application INTEGER NOT NULL,"Index" INTEGER NOT NULL,Category TEXT NOT NULL COLLATE NOCASE,Executable TEXT COLLATE NOCASE,Entrypoint TEXT,RuntimeType TEXT COLLATE NOCASE,StartPage TEXT COLLATE NOCASE,ResourceGroup TEXT COLLATE NOCASE,Flags INTEGER NOT NULL DEFAULT 0,Subsystem INTEGER NOT NULL DEFAULT 0,_LocalizedDictionary BLOB,_Dictionary BLOB);
	ApplicationExtension
	_ApplicationExtensionID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Application	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	Category	STRING	TEXT	
	Executable	STRING	TEXT	
	Entrypoint	STRING	TEXT	
	RuntimeType	STRING	TEXT	
	StartPage	STRING	TEXT	
	ResourceGroup	STRING	TEXT	
	Flags	INTEGER	INTEGER	
	Subsystem	INTEGER	INTEGER	
	_LocalizedDictionary	BYTES	BLOB	
	_Dictionary	BYTES	BLOB	

CREATE TABLE ApplicationIdentity(_ApplicationIdentityID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,ApplicationUserModelId TEXT NOT NULL COLLATE NOCASE,_Dictionary BLOB);
	ApplicationIdentity
	_ApplicationIdentityID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	ApplicationUserModelId	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE ApplicationLicense(_ApplicationLicenseID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,ProductId INTEGER NOT NULL,ProHeader BLOB,License BLOB,_Dictionary BLOB);
	ApplicationLicense
	_ApplicationLicenseID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	ProductId	INTEGER	INTEGER	
	ProHeader	BYTES	BLOB	
	License	BYTES	BLOB	
	_Dictionary	BYTES	BLOB	

CREATE TABLE ApplicationPolicy(_ApplicationPolicyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,User INTEGER NOT NULL DEFAULT 0,Application INTEGER NOT NULL,Name TEXT NOT NULL COLLATE NOCASE,"Index" INTEGER NOT NULL,ValueString TEXT COLLATE NOCASE,ValueNumber INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB);
	ApplicationPolicy
	_ApplicationPolicyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	Application	INTEGER	INTEGER	
	Name	STRING	TEXT	
	Index	INTEGER	INTEGER	
	ValueString	STRING	TEXT	
	ValueNumber	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE ApplicationProperty(_ApplicationPropertyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Application INTEGER NOT NULL,"Index" INTEGER NOT NULL,Name TEXT NOT NULL COLLATE NOCASE,_Dictionary BLOB);
	ApplicationProperty
	_ApplicationPropertyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Application	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	Name	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE AppxExtension(_AppxExtensionID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,User INTEGER NOT NULL,Package INTEGER NOT NULL,Category TEXT NOT NULL,KeyString TEXT,RegistrationInformation TEXT NOT NULL,ExtensionStatus INTEGER NOT NULL,_Dictionary BLOB);
	AppxExtension
	_AppxExtensionID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Category	STRING	TEXT	
	KeyString	STRING	TEXT	
	RegistrationInformation	STRING	TEXT	
	ExtensionStatus	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE BackgroundServiceAgent(_BackgroundServiceAgentID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,ProductId INTEGER NOT NULL,TaskId TEXT NOT NULL COLLATE NOCASE,Category INTEGER NOT NULL,Id INTEGER,BackgroundSpecifier TEXT,BackgroundName TEXT,BackgroundSource TEXT,BackgroundType TEXT,ScheduleAllowed INTEGER,Description TEXT,IsPeriodic INTEGER,MaxStartupLatency INTEGER,ExpectedRuntime INTEGER,BootWorker INTEGER,_Dictionary BLOB);
	BackgroundServiceAgent
	_BackgroundServiceAgentID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	ProductId	INTEGER	INTEGER	
	TaskId	STRING	TEXT	
	Category	INTEGER	INTEGER	
	Id	INTEGER	INTEGER	
	BackgroundSpecifier	STRING	TEXT	
	BackgroundName	STRING	TEXT	
	BackgroundSource	STRING	TEXT	
	BackgroundType	STRING	TEXT	
	ScheduleAllowed	INTEGER	INTEGER	
	Description	STRING	TEXT	
	IsPeriodic	INTEGER	INTEGER	
	MaxStartupLatency	INTEGER	INTEGER	
	ExpectedRuntime	INTEGER	INTEGER	
	BootWorker	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE BnsNotification(_BnsNotificationID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,ProductId INTEGER NOT NULL,ActionId BLOB NOT NULL,TaskId INTEGER NOT NULL,StartTime INTEGER NOT NULL,EndTime INTEGER NOT NULL,ActionType INTEGER NOT NULL,RecurringType INTEGER NOT NULL,ActionState INTEGER NOT NULL,LastUserAction INTEGER NOT NULL,Content TEXT NOT NULL,FriendlyName TEXT NOT NULL,LaunchingContext TEXT NOT NULL,Sound TEXT NOT NULL,Title TEXT NOT NULL,ApplicationInstallPath TEXT NOT NULL COLLATE NOCASE,ApplicationBaseUri TEXT NOT NULL,ReminderId BLOB NOT NULL,OrigStartTime INTEGER NOT NULL,LastResult INTEGER NOT NULL,AgentId INTEGER NOT NULL,LastRuntime INTEGER NOT NULL,AgentUsesLocation INTEGER NOT NULL,DisableBy INTEGER NOT NULL,PushChannel TEXT NOT NULL,RecurringInterval INTEGER NOT NULL,_Dictionary BLOB);
	BnsNotification
	_BnsNotificationID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	ProductId	INTEGER	INTEGER	
	ActionId	BYTES	BLOB	
	TaskId	INTEGER	INTEGER	
	StartTime	INTEGER	INTEGER	
	EndTime	INTEGER	INTEGER	
	ActionType	INTEGER	INTEGER	
	RecurringType	INTEGER	INTEGER	
	ActionState	INTEGER	INTEGER	
	LastUserAction	INTEGER	INTEGER	
	Content	STRING	TEXT	
	FriendlyName	STRING	TEXT	
	LaunchingContext	STRING	TEXT	
	Sound	STRING	TEXT	
	Title	STRING	TEXT	
	ApplicationInstallPath	STRING	TEXT	
	ApplicationBaseUri	STRING	TEXT	
	ReminderId	BYTES	BLOB	
	OrigStartTime	INTEGER	INTEGER	
	LastResult	INTEGER	INTEGER	
	AgentId	INTEGER	INTEGER	
	LastRuntime	INTEGER	INTEGER	
	AgentUsesLocation	INTEGER	INTEGER	
	DisableBy	INTEGER	INTEGER	
	PushChannel	STRING	TEXT	
	RecurringInterval	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE Bundle(_BundleID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Package INTEGER NOT NULL,UniqueLanguage TEXT COLLATE NOCASE,UniqueScale INTEGER NOT NULL,UniqueDXFeatureLevel INTEGER NOT NULL,_Dictionary BLOB);
	Bundle
	_BundleID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	UniqueLanguage	STRING	TEXT	
	UniqueScale	INTEGER	INTEGER	
	UniqueDXFeatureLevel	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE BundlePackage(_BundlePackageID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Bundle INTEGER NOT NULL,PackageType INTEGER NOT NULL,Version INTEGER NOT NULL,Architecture INTEGER NOT NULL,ResourceId TEXT COLLATE NOCASE,Filename TEXT NOT NULL COLLATE NOCASE,"Offset" INTEGER NOT NULL,Size INTEGER NOT NULL,Flags INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB);
	BundlePackage
	_BundlePackageID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Bundle	INTEGER	INTEGER	
	PackageType	INTEGER	INTEGER	
	Version	INTEGER	INTEGER	
	Architecture	INTEGER	INTEGER	
	ResourceId	STRING	TEXT	
	Filename	STRING	TEXT	
	Offset	INTEGER	INTEGER	
	Size	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE BundleResource(_BundleResourceID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,BundlePackage INTEGER NOT NULL,Language TEXT COLLATE NOCASE,Scale INTEGER NOT NULL,DXFeatureLevel INTEGER NOT NULL,_Dictionary BLOB);
	BundleResource
	_BundleResourceID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	BundlePackage	INTEGER	INTEGER	
	Language	STRING	TEXT	
	Scale	INTEGER	INTEGER	
	DXFeatureLevel	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE DefaultTile(_DefaultTileID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Application INTEGER NOT NULL,UpdateRecurrence INTEGER NOT NULL DEFAULT 0,UpdateUriTemplate TEXT,ShowNameOnTiles INTEGER NOT NULL DEFAULT 0,ShortName TEXT COLLATE NOCASE,DefaultSize INTEGER NOT NULL DEFAULT 0,HoloContentChoice TEXT COLLATE NOCASE,MixedRealityModel TEXT COLLATE NOCASE,_Dictionary BLOB);
	DefaultTile
	_DefaultTileID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Application	INTEGER	INTEGER	
	UpdateRecurrence	INTEGER	INTEGER	
	UpdateUriTemplate	STRING	TEXT	
	ShowNameOnTiles	INTEGER	INTEGER	
	ShortName	STRING	TEXT	
	DefaultSize	INTEGER	INTEGER	
	HoloContentChoice	STRING	TEXT	
	MixedRealityModel	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE Dependency(_DependencyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,DependentPackage INTEGER NOT NULL,"Index" INTEGER NOT NULL,DependencyType INTEGER NOT NULL DEFAULT 2,Name TEXT NOT NULL COLLATE NOCASE,Publisher TEXT COLLATE NOCASE,MinVersion INTEGER NOT NULL,MaxVersion INTEGER NOT NULL,Flags INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB);
	Dependency
	_DependencyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	DependentPackage	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	DependencyType	INTEGER	INTEGER	
	Name	STRING	TEXT	
	Publisher	STRING	TEXT	
	MinVersion	INTEGER	INTEGER	
	MaxVersion	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE DependencyGraph(_DependencyGraphID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,_ShadowId INTEGER NOT NULL DEFAULT 0,_IsMarkedForDeletion INTEGER NOT NULL DEFAULT 0,User INTEGER NOT NULL,DependentPackage INTEGER NOT NULL,"Index" INTEGER NOT NULL DEFAULT 0,SupplierPackage INTEGER NOT NULL,DependencyType INTEGER NOT NULL,_Dictionary BLOB);
	DependencyGraph
	_DependencyGraphID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	_ShadowId	INTEGER	INTEGER	
	_IsMarkedForDeletion	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	DependentPackage	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	SupplierPackage	INTEGER	INTEGER	
	DependencyType	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE DeploymentHistory(_DeploymentHistoryID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,PackageIdentity INTEGER NOT NULL,User INTEGER NOT NULL,HResult INTEGER NOT NULL,WhenOccurred INTEGER NOT NULL,_Dictionary BLOB);
	DeploymentHistory
	_DeploymentHistoryID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	PackageIdentity	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	HResult	INTEGER	INTEGER	
	WhenOccurred	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE DeploymentRequest(_DeploymentRequestID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,DeploymentOperation INTEGER NOT NULL DEFAULT 0,ManifestUri TEXT NOT NULL,TargetVolume INTEGER NOT NULL,Options INTEGER NOT NULL DEFAULT 0,TargetUser INTEGER NOT NULL DEFAULT 0,WhenCreated INTEGER NOT NULL,WhenLastModified INTEGER,State INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB);
	DeploymentRequest
	_DeploymentRequestID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	DeploymentOperation	INTEGER	INTEGER	
	ManifestUri	STRING	TEXT	
	TargetVolume	INTEGER	INTEGER	
	Options	INTEGER	INTEGER	
	TargetUser	INTEGER	INTEGER	
	WhenCreated	INTEGER	INTEGER	
	WhenLastModified	INTEGER	INTEGER	
	State	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE DeploymentRequestDependency(_DeploymentRequestDependencyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,DeploymentRequest INTEGER NOT NULL,"Index" INTEGER NOT NULL,PackageUri TEXT NOT NULL,_Dictionary BLOB);
	DeploymentRequestDependency
	_DeploymentRequestDependencyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	DeploymentRequest	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	PackageUri	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE Enterprise(_EnterpriseID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,EnterpriseId BLOB NOT NULL,_Dictionary BLOB);
	Enterprise
	_EnterpriseID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	EnterpriseId	BYTES	BLOB	
	_Dictionary	BYTES	BLOB	

CREATE TABLE FileTypeAssociation(_FileTypeAssociationID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,FileType TEXT NOT NULL COLLATE NOCASE,ContentType TEXT COLLATE NOCASE,Extension INTEGER NOT NULL,"Index" INTEGER NOT NULL,ProgID TEXT COLLATE NOCASE,_Dictionary BLOB);
	FileTypeAssociation
	_FileTypeAssociationID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	FileType	STRING	TEXT	
	ContentType	STRING	TEXT	
	Extension	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	ProgID	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE MigratorPatch(_MigratorPatchID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,PatchId TEXT NOT NULL COLLATE NOCASE,HResult INTEGER NOT NULL,StateRepositoryVersion INTEGER NOT NULL,"When" INTEGER NOT NULL,_Dictionary BLOB);
	MigratorPatch
	_MigratorPatchID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	PatchId	STRING	TEXT	
	HResult	INTEGER	INTEGER	
	StateRepositoryVersion	INTEGER	INTEGER	
	When	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE MrtApplication(_MrtApplicationID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Application INTEGER NOT NULL,DisplayNameReference TEXT NOT NULL,DescriptionReference TEXT NOT NULL,Square150x150LogoReference TEXT NOT NULL,Square44x44LogoReference TEXT NOT NULL,Wide310x150LogoReference TEXT,Square310x310LogoReference TEXT,Square71x71LogoReference TEXT,StartPageReference TEXT,SplashScreenImageReference TEXT,VisualGroupReference TEXT,_Dictionary BLOB);
	MrtApplication
	_MrtApplicationID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Application	INTEGER	INTEGER	
	DisplayNameReference	STRING	TEXT	
	DescriptionReference	STRING	TEXT	
	Square150x150LogoReference	STRING	TEXT	
	Square44x44LogoReference	STRING	TEXT	
	Wide310x150LogoReference	STRING	TEXT	
	Square310x310LogoReference	STRING	TEXT	
	Square71x71LogoReference	STRING	TEXT	
	StartPageReference	STRING	TEXT	
	SplashScreenImageReference	STRING	TEXT	
	VisualGroupReference	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE MrtDefaultTile(_MrtDefaultTileID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,DefaultTile INTEGER NOT NULL,ShortNameReference TEXT NOT NULL,_Dictionary BLOB);
	MrtDefaultTile
	_MrtDefaultTileID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	DefaultTile	INTEGER	INTEGER	
	ShortNameReference	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE MrtPackage(_MrtPackageID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Package INTEGER NOT NULL,DisplayNameReference TEXT NOT NULL,PublisherDisplayNameReference TEXT NOT NULL,DescriptionReference TEXT,LogoReference TEXT NOT NULL,_Dictionary BLOB);
	MrtPackage
	_MrtPackageID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	DisplayNameReference	STRING	TEXT	
	PublisherDisplayNameReference	STRING	TEXT	
	DescriptionReference	STRING	TEXT	
	LogoReference	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE MrtSharedPri(_MrtSharedPriID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Package INTEGER NOT NULL,Filename TEXT NOT NULL COLLATE NOCASE,_Dictionary BLOB);
	MrtSharedPri
	_MrtSharedPriID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Filename	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE MrtUserPri(_MrtUserPriID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Package INTEGER NOT NULL,User INTEGER NOT NULL,Filename TEXT NOT NULL COLLATE NOCASE,MrtSharedPri INTEGER NOT NULL,_Dictionary BLOB);
	MrtUserPri
	_MrtUserPriID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	Filename	STRING	TEXT	
	MrtSharedPri	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE OptionalBundle(_OptionalBundleID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,MainBundle INTEGER NOT NULL,Name TEXT NOT NULL COLLATE NOCASE,Publisher TEXT NOT NULL,Version INTEGER NOT NULL,Filename TEXT COLLATE NOCASE,_Dictionary BLOB);
	OptionalBundle
	_OptionalBundleID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	MainBundle	INTEGER	INTEGER	
	Name	STRING	TEXT	
	Publisher	STRING	TEXT	
	Version	INTEGER	INTEGER	
	Filename	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE OptionalBundlePackage(_OptionalBundlePackageID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,OptionalBundle INTEGER NOT NULL DEFAULT 0,PackageType INTEGER NOT NULL,Version INTEGER NOT NULL,Architecture INTEGER NOT NULL,ResourceId TEXT COLLATE NOCASE,Filename TEXT NOT NULL COLLATE NOCASE,"Offset" INTEGER NOT NULL,Size INTEGER NOT NULL,_Dictionary BLOB);
	OptionalBundlePackage
	_OptionalBundlePackageID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	OptionalBundle	INTEGER	INTEGER	
	PackageType	INTEGER	INTEGER	
	Version	INTEGER	INTEGER	
	Architecture	INTEGER	INTEGER	
	ResourceId	STRING	TEXT	
	Filename	STRING	TEXT	
	Offset	INTEGER	INTEGER	
	Size	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE OptionalBundleResource(_OptionalBundleResourceID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,OptionalBundlePackage INTEGER NOT NULL,Language TEXT COLLATE NOCASE,Scale INTEGER NOT NULL,DXFeatureLevel INTEGER NOT NULL,_Dictionary BLOB);
	OptionalBundleResource
	_OptionalBundleResourceID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	OptionalBundlePackage	INTEGER	INTEGER	
	Language	STRING	TEXT	
	Scale	INTEGER	INTEGER	
	DXFeatureLevel	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE Package(_PackageID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,_Created INTEGER NOT NULL DEFAULT 0,_Modified INTEGER NOT NULL DEFAULT 0,PackageFamily INTEGER NOT NULL,ResourceId TEXT COLLATE NOCASE,Architecture INTEGER NOT NULL,Version INTEGER NOT NULL,PackageFullName TEXT NOT NULL COLLATE NOCASE,IsInbox INTEGER NOT NULL,PackageType INTEGER NOT NULL DEFAULT 0,Flags INTEGER NOT NULL DEFAULT 0,DisplayName TEXT NOT NULL,PublisherDisplayName TEXT NOT NULL,Description TEXT,Logo TEXT NOT NULL COLLATE NOCASE,OSMinVersion INTEGER NOT NULL,OSMaxVersionTested INTEGER NOT NULL,TargetDeviceFamily INTEGER NOT NULL DEFAULT 0,Capabilities INTEGER NOT NULL,SupportedUsers INTEGER NOT NULL DEFAULT 0,SignatureOrigin INTEGER NOT NULL DEFAULT 0,PackageOrigin INTEGER NOT NULL DEFAULT 0,Enterprise INTEGER NOT NULL DEFAULT 0,SourceBundle INTEGER NOT NULL DEFAULT 0,EditionId TEXT COLLATE NOCASE,OSVersionWhenIndexed INTEGER NOT NULL DEFAULT 0,InPlaceUpdateBaseline INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB);
	Package
	_PackageID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	_Created	INTEGER	INTEGER	
	_Modified	INTEGER	INTEGER	
	PackageFamily	INTEGER	INTEGER	
	ResourceId	STRING	TEXT	
	Architecture	INTEGER	INTEGER	
	Version	INTEGER	INTEGER	
	PackageFullName	STRING	TEXT	
	IsInbox	INTEGER	INTEGER	
	PackageType	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	DisplayName	STRING	TEXT	
	PublisherDisplayName	STRING	TEXT	
	Description	STRING	TEXT	
	Logo	STRING	TEXT	
	OSMinVersion	INTEGER	INTEGER	
	OSMaxVersionTested	INTEGER	INTEGER	
	TargetDeviceFamily	INTEGER	INTEGER	
	Capabilities	INTEGER	INTEGER	
	SupportedUsers	INTEGER	INTEGER	
	SignatureOrigin	INTEGER	INTEGER	
	PackageOrigin	INTEGER	INTEGER	
	Enterprise	INTEGER	INTEGER	
	SourceBundle	INTEGER	INTEGER	
	EditionId	STRING	TEXT	
	OSVersionWhenIndexed	INTEGER	INTEGER	
	InPlaceUpdateBaseline	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageChangelog(_PackageChangelogID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,_Created INTEGER NOT NULL,_Deleted INTEGER NOT NULL,PackageFullName TEXT NOT NULL COLLATE NOCASE,_PackageID INTEGER NOT NULL,WhenOccurred INTEGER NOT NULL,_Dictionary BLOB);
	PackageChangelog
	_PackageChangelogID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	_Created	INTEGER	INTEGER	
	_Deleted	INTEGER	INTEGER	
	PackageFullName	STRING	TEXT	
	_PackageID	INTEGER	INTEGER	
	WhenOccurred	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageExtension(_PackageExtensionID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Package INTEGER NOT NULL,"Index" INTEGER NOT NULL,Category TEXT NOT NULL COLLATE NOCASE,Executable TEXT COLLATE NOCASE,Entrypoint TEXT,RuntimeType TEXT COLLATE NOCASE,StartPage TEXT COLLATE NOCASE,Flags INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB);
	PackageExtension
	_PackageExtensionID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	Category	STRING	TEXT	
	Executable	STRING	TEXT	
	Entrypoint	STRING	TEXT	
	RuntimeType	STRING	TEXT	
	StartPage	STRING	TEXT	
	Flags	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageFamily(_PackageFamilyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,Name TEXT NOT NULL COLLATE NOCASE,Publisher TEXT NOT NULL,PublisherId TEXT NOT NULL COLLATE NOCASE,PackageFamilyName TEXT NOT NULL COLLATE NOCASE,PackageSID BLOB NOT NULL,_Dictionary BLOB);
	PackageFamily
	_PackageFamilyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	Name	STRING	TEXT	
	Publisher	STRING	TEXT	
	PublisherId	STRING	TEXT	
	PackageFamilyName	STRING	TEXT	
	PackageSID	BYTES	BLOB	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageFamilyPolicy(_PackageFamilyPolicyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,User INTEGER NOT NULL DEFAULT 0,PackageFamily INTEGER NOT NULL,Name TEXT NOT NULL COLLATE NOCASE,"Index" INTEGER NOT NULL,ValueString TEXT COLLATE NOCASE,ValueNumber INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB);
	PackageFamilyPolicy
	_PackageFamilyPolicyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	PackageFamily	INTEGER	INTEGER	
	Name	STRING	TEXT	
	Index	INTEGER	INTEGER	
	ValueString	STRING	TEXT	
	ValueNumber	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageFamilyUser(_PackageFamilyUserID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,PackageFamily INTEGER NOT NULL,User INTEGER NOT NULL,WhenInstalled INTEGER NOT NULL,_Dictionary BLOB);
	PackageFamilyUser
	_PackageFamilyUserID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	PackageFamily	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	WhenInstalled	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageFamilyUserResource(_PackageFamilyUserResourceID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,PackageFamilyUser INTEGER NOT NULL,ResourceId TEXT NOT NULL COLLATE NOCASE,_Dictionary BLOB);
	PackageFamilyUserResource
	_PackageFamilyUserResourceID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	PackageFamilyUser	INTEGER	INTEGER	
	ResourceId	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageIdentity(_PackageIdentityID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL DEFAULT 1,PackageFamily INTEGER NOT NULL,PackageFullName TEXT NOT NULL COLLATE NOCASE,_Dictionary BLOB);
	PackageIdentity
	_PackageIdentityID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	PackageFamily	INTEGER	INTEGER	
	PackageFullName	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageLocation(_PackageLocationID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,_ShadowId INTEGER NOT NULL DEFAULT 0,_IsMarkedForDeletion INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL,Volume INTEGER NOT NULL,InstalledLocation TEXT NOT NULL COLLATE NOCASE,_Dictionary BLOB);
	PackageLocation
	_PackageLocationID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	_ShadowId	INTEGER	INTEGER	
	_IsMarkedForDeletion	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Volume	INTEGER	INTEGER	
	InstalledLocation	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageMachineStatus(_PackageStatusID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,_Created INTEGER NOT NULL DEFAULT 0,_Modified INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL DEFAULT 0,Status INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB);
	PackageMachineStatus
	_PackageStatusID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	_Created	INTEGER	INTEGER	
	_Modified	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Status	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackagePolicy(_PackagePolicyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,User INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL,Name TEXT NOT NULL COLLATE NOCASE,"Index" INTEGER NOT NULL,ValueString TEXT COLLATE NOCASE,ValueNumber INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB);
	PackagePolicy
	_PackagePolicyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Name	STRING	TEXT	
	Index	INTEGER	INTEGER	
	ValueString	STRING	TEXT	
	ValueNumber	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageProperty(_PackagePropertyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Package INTEGER NOT NULL,"Index" INTEGER NOT NULL,Name TEXT NOT NULL COLLATE NOCASE,_Dictionary BLOB);
	PackageProperty
	_PackagePropertyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	Name	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageUser(_PackageUserID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,_ShadowId INTEGER NOT NULL DEFAULT 0,_IsMarkedForDeletion INTEGER NOT NULL DEFAULT 0,_Created INTEGER NOT NULL DEFAULT 0,_Modified INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL,User INTEGER NOT NULL,InstallTime INTEGER NOT NULL,OSVersionWhenInstalled INTEGER NOT NULL DEFAULT 0,WhenRestored INTEGER,IsExplicitlyInstalled INTEGER NOT NULL,DeploymentState INTEGER NOT NULL,PackageStatus INTEGER NOT NULL,AppDataVolume INTEGER NOT NULL,_Dictionary BLOB);
	PackageUser
	_PackageUserID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	_ShadowId	INTEGER	INTEGER	
	_IsMarkedForDeletion	INTEGER	INTEGER	
	_Created	INTEGER	INTEGER	
	_Modified	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	InstallTime	INTEGER	INTEGER	
	OSVersionWhenInstalled	INTEGER	INTEGER	
	WhenRestored	INTEGER	INTEGER	
	IsExplicitlyInstalled	INTEGER	INTEGER	
	DeploymentState	INTEGER	INTEGER	
	PackageStatus	INTEGER	INTEGER	
	AppDataVolume	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PackageUserStatus(_PackageStatusID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,_Created INTEGER NOT NULL DEFAULT 0,_Modified INTEGER NOT NULL DEFAULT 0,PackageUser INTEGER NOT NULL DEFAULT 0,Status INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB);
	PackageUserStatus
	_PackageStatusID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	_Created	INTEGER	INTEGER	
	_Modified	INTEGER	INTEGER	
	PackageUser	INTEGER	INTEGER	
	Status	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PrimaryTile(_PrimaryTileID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Application INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL DEFAULT 0,DeploymentRequest INTEGER NOT NULL DEFAULT 0,Flags INTEGER NOT NULL DEFAULT 0,TileTemplate INTEGER NOT NULL DEFAULT 0,TileId TEXT NOT NULL COLLATE NOCASE,Arguments TEXT COLLATE NOCASE,EditionId TEXT COLLATE NOCASE,_Dictionary BLOB);
	PrimaryTile
	_PrimaryTileID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Application	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	DeploymentRequest	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	TileTemplate	INTEGER	INTEGER	
	TileId	STRING	TEXT	
	Arguments	STRING	TEXT	
	EditionId	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PrimaryTileUser(_PrimaryTileUserID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,_Created INTEGER NOT NULL DEFAULT 0,_Modified INTEGER NOT NULL DEFAULT 0,PrimaryTile INTEGER NOT NULL,User INTEGER NOT NULL,State INTEGER NOT NULL DEFAULT 0,TileUniqueId BLOB NOT NULL,_Dictionary BLOB);
	PrimaryTileUser
	_PrimaryTileUserID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	_Created	INTEGER	INTEGER	
	_Modified	INTEGER	INTEGER	
	PrimaryTile	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	State	INTEGER	INTEGER	
	TileUniqueId	BYTES	BLOB	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PrimaryTileUserChangelog(_PrimaryTileUserChangelogID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,_Created INTEGER NOT NULL,_Deleted INTEGER NOT NULL,User INTEGER NOT NULL,TileUniqueId BLOB NOT NULL,WhenOccurred INTEGER NOT NULL,_Dictionary BLOB);
	PrimaryTileUserChangelog
	_PrimaryTileUserChangelogID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	_Created	INTEGER	INTEGER	
	_Deleted	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	TileUniqueId	BYTES	BLOB	
	WhenOccurred	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE Protocol(_ProtocolID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,ProtocolName TEXT NOT NULL COLLATE NOCASE,ReturnResults INTEGER NOT NULL DEFAULT 0,Extension INTEGER NOT NULL,"Index" INTEGER NOT NULL,ProgID TEXT COLLATE NOCASE,_Dictionary BLOB);
	Protocol
	_ProtocolID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	ProtocolName	STRING	TEXT	
	ReturnResults	INTEGER	INTEGER	
	Extension	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	ProgID	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE PublisherCacheFolder(_PublisherCacheFolderID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,PackageExtension INTEGER NOT NULL,"Index" INTEGER NOT NULL,FolderName TEXT COLLATE NOCASE,_Dictionary BLOB);
	PublisherCacheFolder
	_PublisherCacheFolderID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	PackageExtension	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	FolderName	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE Resource(_ResourceID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Package INTEGER NOT NULL,"Index" INTEGER NOT NULL,Language TEXT NOT NULL COLLATE NOCASE,_Dictionary BLOB);
	Resource
	_ResourceID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	Language	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE SecondaryTile(_SecondaryTileID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Application INTEGER NOT NULL DEFAULT 0,Package INTEGER NOT NULL DEFAULT 0,DeploymentRequest INTEGER NOT NULL DEFAULT 0,Flags INTEGER NOT NULL DEFAULT 0,TileTemplate INTEGER NOT NULL DEFAULT 0,TileId TEXT NOT NULL COLLATE NOCASE,Arguments TEXT COLLATE NOCASE,EditionId TEXT COLLATE NOCASE,_Dictionary BLOB);
	SecondaryTile
	_SecondaryTileID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Application	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	DeploymentRequest	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	TileTemplate	INTEGER	INTEGER	
	TileId	STRING	TEXT	
	Arguments	STRING	TEXT	
	EditionId	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE SecondaryTileUser(_SecondaryTileUserID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,_Created INTEGER NOT NULL DEFAULT 0,_Modified INTEGER NOT NULL DEFAULT 0,SecondaryTile INTEGER NOT NULL,User INTEGER NOT NULL,State INTEGER NOT NULL DEFAULT 0,TileUniqueId BLOB NOT NULL,RefCount INTEGER NOT NULL DEFAULT 1,_Dictionary BLOB);
	SecondaryTileUser
	_SecondaryTileUserID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	_Created	INTEGER	INTEGER	
	_Modified	INTEGER	INTEGER	
	SecondaryTile	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	State	INTEGER	INTEGER	
	TileUniqueId	BYTES	BLOB	
	RefCount	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE SecondaryTileUserChangelog(_SecondaryTileUserChangelogID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,_Created INTEGER NOT NULL,_Deleted INTEGER NOT NULL,User INTEGER NOT NULL,TileUniqueId BLOB NOT NULL,WhenOccurred INTEGER NOT NULL,_Dictionary BLOB);
	SecondaryTileUserChangelog
	_SecondaryTileUserChangelogID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	_Created	INTEGER	INTEGER	
	_Deleted	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	TileUniqueId	BYTES	BLOB	
	WhenOccurred	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE Sequence(_SequenceID INTEGER PRIMARY KEY NOT NULL,Id INTEGER NOT NULL,LastValue INTEGER NOT NULL);
	Sequence
	_SequenceID	INTEGER	INTEGER	PRIMARY ROWID
	Id	INTEGER	INTEGER	
	LastValue	INTEGER	INTEGER	

CREATE TABLE TargetDeviceFamily(_TargetDeviceFamilyID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Package INTEGER NOT NULL,"Index" INTEGER NOT NULL,Name INTEGER NOT NULL,MinVersion INTEGER NOT NULL,MaxVersion INTEGER NOT NULL,_Dictionary BLOB);
	TargetDeviceFamily
	_TargetDeviceFamilyID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	Name	INTEGER	INTEGER	
	MinVersion	INTEGER	INTEGER	
	MaxVersion	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE Task(_TaskID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,ProductId INTEGER NOT NULL,Id TEXT NOT NULL COLLATE NOCASE,NavigationPage TEXT,TaskType INTEGER,RuntimeType INTEGER,ActivationPolicy INTEGER,Flags INTEGER,ImagePath TEXT COLLATE NOCASE,ImageParameterss TEXT,Transition INTEGER,BackgroundExecability TEXT,_Dictionary BLOB);
	Task
	_TaskID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	ProductId	INTEGER	INTEGER	
	Id	STRING	TEXT	
	NavigationPage	STRING	TEXT	
	TaskType	INTEGER	INTEGER	
	RuntimeType	INTEGER	INTEGER	
	ActivationPolicy	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	ImagePath	STRING	TEXT	
	ImageParameterss	STRING	TEXT	
	Transition	INTEGER	INTEGER	
	BackgroundExecability	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE User(_UserID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,UserSid BLOB NOT NULL,_Dictionary BLOB);
	User
	_UserID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	UserSid	BYTES	BLOB	
	_Dictionary	BYTES	BLOB	

CREATE TABLE Volume(_VolumeID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,MountPoint TEXT NOT NULL COLLATE NOCASE,Name TEXT NOT NULL COLLATE NOCASE,SisPath TEXT NOT NULL COLLATE NOCASE,IsSystemVolume INTEGER NOT NULL,IsOffline INTEGER NOT NULL,IsCompressionSuitable INTEGER NOT NULL DEFAULT 0,DriveType INTEGER NOT NULL,SupportsHardLinks INTEGER NOT NULL,SupportsEAIntegrity INTEGER NOT NULL DEFAULT 0,_Dictionary BLOB);
	Volume
	_VolumeID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	MountPoint	STRING	TEXT	
	Name	STRING	TEXT	
	SisPath	STRING	TEXT	
	IsSystemVolume	INTEGER	INTEGER	
	IsOffline	INTEGER	INTEGER	
	IsCompressionSuitable	INTEGER	INTEGER	
	DriveType	INTEGER	INTEGER	
	SupportsHardLinks	INTEGER	INTEGER	
	SupportsEAIntegrity	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE WorkInProgress(_WorkInProgressID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,"Key" TEXT COLLATE NOCASE,_Dictionary BLOB);
	WorkInProgress
	_WorkInProgressID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	Key	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE WowDependencyGraph(_WowDependencyGraphID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,_ShadowId INTEGER NOT NULL DEFAULT 0,_IsMarkedForDeletion INTEGER NOT NULL DEFAULT 0,User INTEGER NOT NULL,DependentPackage INTEGER NOT NULL,"Index" INTEGER NOT NULL DEFAULT 0,SupplierPackage INTEGER NOT NULL,DependencyType INTEGER NOT NULL,_Dictionary BLOB);
	WowDependencyGraph
	_WowDependencyGraphID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	_ShadowId	INTEGER	INTEGER	
	_IsMarkedForDeletion	INTEGER	INTEGER	
	User	INTEGER	INTEGER	
	DependentPackage	INTEGER	INTEGER	
	Index	INTEGER	INTEGER	
	SupplierPackage	INTEGER	INTEGER	
	DependencyType	INTEGER	INTEGER	
	_Dictionary	BYTES	BLOB	

CREATE TABLE Xap(_XapID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Package INTEGER NOT NULL,Publisher TEXT,Author TEXT,Description TEXT,Version TEXT,Path TEXT COLLATE NOCASE,Icon TEXT COLLATE NOCASE,State INTEGER,Flags INTEGER,ProductId BLOB,ApplicationInstallType INTEGER,InvalidReason INTEGER,InstallDate INTEGER,InstanceId BLOB,DefaultTask TEXT,OfferId BLOB,ApplicationPlatformVersion INTEGER,BitsPerPixel INTEGER,PublisherId BLOB,Multicore INTEGER,Sid TEXT,ApplicationPlatformVersionLightUp INTEGER,DataPath TEXT COLLATE NOCASE,StorageId BLOB,PackageFamilyName INTEGER NOT NULL,Application INTEGER NOT NULL,Genre INTEGER,Title TEXT,ModifiedDate INTEGER,OpFlags INTEGER,PayloadId BLOB,_Dictionary BLOB);
	Xap
	_XapID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	Publisher	STRING	TEXT	
	Author	STRING	TEXT	
	Description	STRING	TEXT	
	Version	STRING	TEXT	
	Path	STRING	TEXT	
	Icon	STRING	TEXT	
	State	INTEGER	INTEGER	
	Flags	INTEGER	INTEGER	
	ProductId	BYTES	BLOB	
	ApplicationInstallType	INTEGER	INTEGER	
	InvalidReason	INTEGER	INTEGER	
	InstallDate	INTEGER	INTEGER	
	InstanceId	BYTES	BLOB	
	DefaultTask	STRING	TEXT	
	OfferId	BYTES	BLOB	
	ApplicationPlatformVersion	INTEGER	INTEGER	
	BitsPerPixel	INTEGER	INTEGER	
	PublisherId	BYTES	BLOB	
	Multicore	INTEGER	INTEGER	
	Sid	STRING	TEXT	
	ApplicationPlatformVersionLightUp	INTEGER	INTEGER	
	DataPath	STRING	TEXT	
	StorageId	BYTES	BLOB	
	PackageFamilyName	INTEGER	INTEGER	
	Application	INTEGER	INTEGER	
	Genre	INTEGER	INTEGER	
	Title	STRING	TEXT	
	ModifiedDate	INTEGER	INTEGER	
	OpFlags	INTEGER	INTEGER	
	PayloadId	BYTES	BLOB	
	_Dictionary	BYTES	BLOB	

CREATE TABLE XapExtension(_XapExtensionID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Consumer BLOB,ExtensionId TEXT NOT NULL COLLATE NOCASE,Supplier INTEGER NOT NULL,SupplierTaskId TEXT NOT NULL COLLATE NOCASE,ExtensionTitle TEXT,ExtensionIcon TEXT,ExtraFile TEXT COLLATE NOCASE,ExtensionCategory INTEGER NOT NULL,ExtContentFileTypeList TEXT NOT NULL,ExtDataFormatsList TEXT NOT NULL,_Dictionary BLOB);
	XapExtension
	_XapExtensionID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Consumer	BYTES	BLOB	
	ExtensionId	STRING	TEXT	
	Supplier	INTEGER	INTEGER	
	SupplierTaskId	STRING	TEXT	
	ExtensionTitle	STRING	TEXT	
	ExtensionIcon	STRING	TEXT	
	ExtraFile	STRING	TEXT	
	ExtensionCategory	INTEGER	INTEGER	
	ExtContentFileTypeList	STRING	TEXT	
	ExtDataFormatsList	STRING	TEXT	
	_Dictionary	BYTES	BLOB	

CREATE TABLE XboxPackage(_XboxPackageID INTEGER PRIMARY KEY NOT NULL,_Revision INTEGER NOT NULL,_WorkId INTEGER NOT NULL,Package INTEGER NOT NULL DEFAULT 0,EditionId TEXT NOT NULL COLLATE NOCASE,BuildId BLOB NOT NULL,DeviceId BLOB NOT NULL,BuildVersion INTEGER NOT NULL,ContentId BLOB NOT NULL,ProductId BLOB NOT NULL,MediaId TEXT COLLATE NOCASE,PackageSize INTEGER NOT NULL DEFAULT 0,TitleId INTEGER DEFAULT 0,PrimaryServiceConfigId BLOB,EraVersion INTEGER NOT NULL DEFAULT 0,EscrowedKeyBlobId BLOB,_Dictionary BLOB);
	XboxPackage
	_XboxPackageID	INTEGER	INTEGER	PRIMARY ROWID
	_Revision	INTEGER	INTEGER	
	_WorkId	INTEGER	INTEGER	
	Package	INTEGER	INTEGER	
	EditionId	STRING	TEXT	
	BuildId	BYTES	BLOB	
	DeviceId	BYTES	BLOB	
	BuildVersion	INTEGER	INTEGER	
	ContentId	BYTES	BLOB	
	ProductId	BYTES	BLOB	
	MediaId	STRING	TEXT	
	PackageSize	INTEGER	INTEGER	
	TitleId	INTEGER	INTEGER	
	PrimaryServiceConfigId	BYTES	BLOB	
	EraVersion	INTEGER	INTEGER	
	EscrowedKeyBlobId	BYTES	BLOB	
	_Dictionary	BYTES	BLOB	

